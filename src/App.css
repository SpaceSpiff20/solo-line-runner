#root {
  margin: 0 auto;
  text-align: center;
}

/* Modern App Container */
.app-container {
  min-height: 100vh;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 2rem;
  position: relative;
  overflow: hidden;
}

.app-container::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.05'%3E%3Ccircle cx='30' cy='30' r='2'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
  pointer-events: none;
}

/* Main Panels Container */
.main-panels {
  display: flex;
  align-items: flex-start;
  gap: 2rem;
  position: relative;
  z-index: 10;
  animation: slideInUp 0.6s ease-out;
  transition: all 0.3s ease;
}

/* Controls Panel */
.controls-panel {
  position: relative;
  z-index: 10;
  width: 100%;
  max-width: 480px;
  flex-shrink: 0;
  transition: all 0.3s ease;
}

.controls-panel .card {
  backdrop-filter: blur(20px);
  background: rgba(255, 255, 255, 0.95);
  border: 1px solid rgba(255, 255, 255, 0.2);
  box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
  transition: all 0.3s ease;
  height: fit-content;
}

.controls-panel .card:hover {
  transform: translateY(-2px);
  box-shadow: 0 35px 60px -12px rgba(0, 0, 0, 0.3);
}

/* Voice Assignments Panel */
.voice-assignments-panel {
  position: relative;
  z-index: 10;
  width: 100%;
  max-width: 480px;
  flex-shrink: 0;
  animation: slideInRight 0.5s ease-out;
  transition: all 0.3s ease;
}

.voice-assignments-panel .card {
  backdrop-filter: blur(20px);
  background: rgba(255, 255, 255, 0.95);
  border: 1px solid rgba(255, 255, 255, 0.2);
  box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
  transition: all 0.3s ease;
  height: fit-content;
  max-height: 100vh;
  overflow: hidden;
  display: flex;
  flex-direction: column;
}

.voice-assignments-panel .card:hover {
  transform: translateY(-2px);
  box-shadow: 0 35px 60px -12px rgba(0, 0, 0, 0.3);
}

.voice-assignments-panel .card-content {
  flex: 1;
  overflow-y: auto;
  padding-right: 0.5rem;
  max-height: calc(100vh - 200px);
}

.voice-assignments-panel .card-content::-webkit-scrollbar {
  width: 6px;
}

.voice-assignments-panel .card-content::-webkit-scrollbar-track {
  background: rgba(0, 0, 0, 0.05);
  border-radius: 3px;
}

.voice-assignments-panel .card-content::-webkit-scrollbar-thumb {
  background: rgba(0, 0, 0, 0.2);
  border-radius: 3px;
}

.voice-assignments-panel .card-content::-webkit-scrollbar-thumb:hover {
  background: rgba(0, 0, 0, 0.3);
}

/* Voice Clone Status Panel */
.voice-clone-status-panel {
  position: relative;
  z-index: 10;
  width: 100%;
  max-width: 480px;
  flex-shrink: 0;
  animation: slideInLeft 0.5s ease-out;
  transition: all 0.3s ease;
}

.voice-clone-status-panel .card {
  backdrop-filter: blur(20px);
  background: rgba(255, 255, 255, 0.95);
  border: 1px solid rgba(255, 255, 255, 0.2);
  box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
  transition: all 0.3s ease;
  height: fit-content;
  max-height: 100vh;
  overflow: hidden;
  display: flex;
  flex-direction: column;
}

.voice-clone-status-panel .card:hover {
  transform: translateY(-2px);
  box-shadow: 0 35px 60px -12px rgba(0, 0, 0, 0.3);
}

.voice-clone-status-panel .card-content {
  flex: 1;
  overflow-y: auto;
  padding-right: 0.5rem;
  max-height: calc(100vh - 200px);
}

.voice-clone-status-panel .card-content::-webkit-scrollbar {
  width: 6px;
}

.voice-clone-status-panel .card-content::-webkit-scrollbar-track {
  background: rgba(0, 0, 0, 0.05);
  border-radius: 3px;
}

.voice-clone-status-panel .card-content::-webkit-scrollbar-thumb {
  background: rgba(0, 0, 0, 0.2);
  border-radius: 3px;
}

.voice-clone-status-panel .card-content::-webkit-scrollbar-thumb:hover {
  background: rgba(0, 0, 0, 0.3);
}

/* Ensure both panels have the same height when voice assignments are shown */
.main-panels:has(.voice-assignments-panel) .controls-panel .card,
.main-panels:has(.voice-assignments-panel) .voice-assignments-panel .card {
  min-height: 600px;
}

/* Ensure all panels have the same height when voice clone status is shown */
.main-panels:has(.voice-clone-status-panel) .controls-panel .card,
.main-panels:has(.voice-clone-status-panel) .voice-clone-status-panel .card {
  min-height: 600px;
}

/* Fallback for browsers that don't support :has() */
@supports not (selector(:has(*))) {
  .main-panels.showing-voice-assignments .controls-panel .card,
  .main-panels.showing-voice-assignments .voice-assignments-panel .card {
    min-height: 600px;
  }
  
  .main-panels.showing-voice-clone-status .controls-panel .card,
  .main-panels.showing-voice-clone-status .voice-clone-status-panel .card {
    min-height: 600px;
  }
}

/* Practice Mode Styles */
.app-container.practice-active {
  background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);
}

.app-container.practice-active .main-panels {
  opacity: 0.3;
  transform: scale(0.95);
  transition: all 0.3s ease;
}

.app-container.practice-active .main-panels:hover {
  opacity: 1;
  transform: scale(1);
}

/* Cue Panel */
.cue-panel {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 20;
  width: 90%;
  max-width: 800px;
  animation: fadeInScale 0.5s ease-out;
}

.cue-panel .card {
  backdrop-filter: blur(20px);
  background: rgba(255, 255, 255, 0.98);
  border: 1px solid rgba(255, 255, 255, 0.3);
  box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.4);
  text-align: center;
  padding: 3rem 2rem;
}

/* Animations */
@keyframes slideInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInRight {
  from {
    opacity: 0;
    transform: translateX(30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInLeft {
  from {
    opacity: 0;
    transform: translateX(-30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fadeInScale {
  from {
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.9);
  }
  to {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
}

/* Responsive Design */
@media (max-width: 768px) {
  .app-container {
    padding: 1rem;
  }
  
  .main-panels {
    flex-direction: column;
    gap: 1rem;
    align-items: center;
  }
  
  .controls-panel,
  .voice-assignments-panel {
    max-width: 100%;
  }
  
  .cue-panel {
    width: 95%;
    padding: 0 1rem;
  }
  
  .cue-panel .card {
    padding: 2rem 1rem;
  }
}


